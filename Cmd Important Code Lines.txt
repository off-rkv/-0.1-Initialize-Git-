🧠 Step-by-Step Git Setup & Push to GitHub (with Explanations)
🔹 Step 1: Configure Git Globally (One-time only)

git config --global user.name "Your Full Name"
git config --global user.email "youremail@example.com"
📝 Why?

Tells Git who you are — this info is attached to every commit.

Needed only once per machine.

📌 Do it before your first commit.

🔹 Step 2: Initialize Git in a Project Folder

cd path/to/your/project
git init
📝 Why?

Initializes a .git folder in your project.

Starts tracking changes.

📌 Do it once per project.

🔹 Step 3: Create/Add a File

echo "# My Project Title" > README.md
📝 Why?

Git needs something to track and commit.

📌 Do this before your first commit.

🔹 Step 4: Stage the File(s)

git add .
📝 Why?

Prepares the file(s) to be committed (like "selecting" them).

📌 Do this every time before committing.

🔹 Step 5: Commit the Changes

git commit -m "Initial commit"
📝 Why?

Takes a snapshot of the staged files.

Starts your project history.

📌 Do this after staging changes.

🔹 Step 6: Rename Branch to main (Optional but Recommended)

git branch -M main
📝 Why?

GitHub uses main as default instead of master.

Avoids mismatch issues when pushing.

📌 Do this right after the first commit.

🔹 Step 7: Add Remote GitHub Repository

git remote add origin https://github.com/your-username/your-repo.git
📝 Why?

Links your local repo to the GitHub version.

📌 Do it once per project after creating the repo on GitHub.

🟡 OPTIONAL: Check Your Remote

git remote -v
🔹 Step 8: Push to GitHub (If No Remote Conflict)

git push -u origin main
📝 Why?

Sends your commits to GitHub.

-u sets origin/main as your default push target.

🔴 If You See an Error Like:
rejected main -> main (fetch first)
That means GitHub already has commits (e.g., README created online).

Then run:

🔹 Step 9: Handle Remote Conflict (Use One of These)
✅ Option A: Merge GitHub & Local (Recommended)

git pull origin main --allow-unrelated-histories
git push origin main
📝 Use this if you want to keep both GitHub and local changes.

⚠️ Option B: Overwrite GitHub (Dangerous)

git push -f origin main
📝 Use this only if you're 100% sure your local code should replace everything on GitHub.

✅ Done! 🎉
Now your local project is pushed to GitHub successfully.

🔁 After This:
Every time you make changes:

git add .
git commit -m "Your message"
git push
